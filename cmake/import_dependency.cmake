
function(get_library_property library package_name target)
    if (${library} STREQUAL "abseil-cpp")
        set(${package_name} "absl" PARENT_SCOPE)
        set(${target} absl::strings PARENT_SCOPE)
    elseif (${library} STREQUAL "fmt")
        set(${package_name} "fmt" PARENT_SCOPE)
        set(${target} fmt::fmt PARENT_SCOPE)
    elseif(${library} STREQUAL "grpc")
        set(${package_name} "gRPC" PARENT_SCOPE)
        set(${target} gRPC::grpc++ PARENT_SCOPE)
    elseif(${library} STREQUAL "libevent")
        set(${package_name} "Libevent" PARENT_SCOPE)
        set(${target} libevent::core PARENT_SCOPE)
    elseif(${library} STREQUAL "nlohmann")
        set(${package_name} "nlohmann_json" PARENT_SCOPE)
        set(${target} nlohmann_json::nlohmann_json PARENT_SCOPE)
    elseif(${library} STREQUAL "prometheus-cpp")
        set(${package_name} "prometheus-cpp" PARENT_SCOPE)
        set(${target} prometheus-cpp::core PARENT_SCOPE)
    elseif(${library} STREQUAL "protobuf")
        set(${package_name} "Protobuf" PARENT_SCOPE)
        set(${target} protobuf::libprotobuf PARENT_SCOPE)
    elseif(${library} STREQUAL "spdlog")
        set(${package_name} "spdlog" PARENT_SCOPE)
        set(${target} spdlog::spdlog PARENT_SCOPE)
    else()
        message(FATAL_ERROR "Unknown library: ${library}")
    endif()
endfunction()

function(process_provider library provider)
    get_library_property(${library} PACKAGE_NAME TARGET)
    if (TARGET ${TARGET})
        return()
    endif()

    if ("${provider}" STREQUAL "package")
        find_package(${PACKAGE_NAME} CONFIG REQUIRED)
    elseif ("${provider}" STREQUAL "module")
        if (NOT EXISTS "${CMAKE_SOURCE_DIR}/third_party/${library}/CMakeLists.txt")
            message(FATAL_ERROR "The submodule ${library} does not exist, please update the submodule")
        endif()
        add_subdirectory(${CMAKE_SOURCE_DIR}/third_party/${library})
    else()
        message(FATAL_ERROR "Unknown library(${library}) provider: ${provider}")
    endif()
endfunction()
